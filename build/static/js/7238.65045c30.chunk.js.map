{"version":3,"file":"static/js/7238.65045c30.chunk.js","mappings":"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","sources":["../node_modules/@react-aria/ssr/dist/packages/@react-aria/ssr/src/SSRProvider.tsx","../node_modules/@restart/ui/node_modules/@restart/hooks/esm/useIsomorphicEffect.js","../node_modules/@restart/ui/node_modules/@restart/hooks/esm/useResizeObserver.js","../node_modules/@restart/ui/esm/Anchor.js","../node_modules/@restart/ui/esm/NavContext.js","../node_modules/@restart/ui/esm/SelectableContext.js","../node_modules/@restart/ui/node_modules/@restart/hooks/esm/useEventListener.js","../node_modules/@restart/ui/node_modules/@restart/hooks/esm/useForceUpdate.js","../node_modules/@restart/ui/node_modules/@restart/hooks/esm/useGlobalListener.js","../node_modules/@restart/ui/esm/DropdownContext.js","../node_modules/@restart/ui/esm/DropdownMenu.js","../node_modules/@restart/ui/esm/DropdownToggle.js","../node_modules/@restart/ui/esm/DropdownItem.js","../node_modules/@restart/ui/esm/Dropdown.js","../node_modules/react-bootstrap/esm/DropdownContext.js","../node_modules/react-bootstrap/esm/DropdownItem.js","../node_modules/@restart/hooks/esm/useIsomorphicEffect.js","../node_modules/react-bootstrap/esm/useWrappedRefWithWarning.js","../node_modules/react-bootstrap/esm/DropdownMenu.js","../node_modules/react-bootstrap/esm/DropdownToggle.js","../node_modules/react-bootstrap/esm/Dropdown.js","../node_modules/react-bootstrap/esm/NavbarContext.js"],"sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport React, {ReactNode, useContext, useLayoutEffect, useMemo, useState} from 'react';\n\n// To support SSR, the auto incrementing id counter is stored in a context. This allows\n// it to be reset on every request to ensure the client and server are consistent.\n// There is also a prefix string that is used to support async loading components\n// Each async boundary must be wrapped in an SSR provider, which appends to the prefix\n// and resets the current id counter. This ensures that async loaded components have\n// consistent ids regardless of the loading order.\ninterface SSRContextValue {\n  prefix: string,\n  current: number\n}\n\n// Default context value to use in case there is no SSRProvider. This is fine for\n// client-only apps. In order to support multiple copies of React Aria potentially\n// being on the page at once, the prefix is set to a random number. SSRProvider\n// will reset this to zero for consistency between server and client, so in the\n// SSR case multiple copies of React Aria is not supported.\nconst defaultContext: SSRContextValue = {\n  prefix: String(Math.round(Math.random() * 10000000000)),\n  current: 0\n};\n\nconst SSRContext = React.createContext<SSRContextValue>(defaultContext);\n\ninterface SSRProviderProps {\n  /** Your application here. */\n  children: ReactNode\n}\n\n/**\n * When using SSR with React Aria, applications must be wrapped in an SSRProvider.\n * This ensures that auto generated ids are consistent between the client and server.\n */\nexport function SSRProvider(props: SSRProviderProps): JSX.Element {\n  let cur = useContext(SSRContext);\n  let value: SSRContextValue = useMemo(() => ({\n    // If this is the first SSRProvider, start with an empty string prefix, otherwise\n    // append and increment the counter.\n    prefix: cur === defaultContext ? '' : `${cur.prefix}-${++cur.current}`,\n    current: 0\n  }), [cur]);\n\n  return (\n    <SSRContext.Provider value={value}>\n      {props.children}\n    </SSRContext.Provider>\n  );\n}\n\nlet canUseDOM = Boolean(\n  typeof window !== 'undefined' &&\n  window.document &&\n  window.document.createElement\n);\n\n/** @private */\nexport function useSSRSafeId(defaultId?: string): string {\n  let ctx = useContext(SSRContext);\n\n  // If we are rendering in a non-DOM environment, and there's no SSRProvider,\n  // provide a warning to hint to the developer to add one.\n  if (ctx === defaultContext && !canUseDOM) {\n    console.warn('When server rendering, you must wrap your application in an <SSRProvider> to ensure consistent ids are generated between the client and server.');\n  }\n\n  return useMemo(() => defaultId || `react-aria${ctx.prefix}-${++ctx.current}`, [defaultId]);\n}\n\n/**\n * Returns whether the component is currently being server side rendered or\n * hydrated on the client. Can be used to delay browser-specific rendering\n * until after hydration.\n */\nexport function useIsSSR(): boolean {\n  let cur = useContext(SSRContext);\n  let isInSSRContext = cur !== defaultContext;\n  let [isSSR, setIsSSR] = useState(isInSSRContext);\n\n  // If on the client, and the component was initially server rendered,\n  // then schedule a layout effect to update the component after hydration.\n  if (typeof window !== 'undefined' && isInSSRContext) {\n    // This if statement technically breaks the rules of hooks, but is safe\n    // because the condition never changes after mounting.\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    useLayoutEffect(() => {\n      setIsSSR(false);\n    }, []);\n  }\n\n  return isSSR;\n}\n","import { useEffect, useLayoutEffect } from 'react';\nvar isReactNative = typeof global !== 'undefined' && // @ts-ignore\nglobal.navigator && // @ts-ignore\nglobal.navigator.product === 'ReactNative';\nvar isDOM = typeof document !== 'undefined';\n/**\n * Is `useLayoutEffect` in a DOM or React Native environment, otherwise resolves to useEffect\n * Only useful to avoid the console warning.\n *\n * PREFER `useEffect` UNLESS YOU KNOW WHAT YOU ARE DOING.\n *\n * @category effects\n */\n\nexport default isDOM || isReactNative ? useLayoutEffect : useEffect;","import { useState } from 'react';\nimport useEffect from './useIsomorphicEffect';\nvar targetMap = new WeakMap();\nvar resizeObserver;\n\nfunction getResizeObserver() {\n  // eslint-disable-next-line no-return-assign\n  return resizeObserver = resizeObserver || new window.ResizeObserver(function (entries) {\n    entries.forEach(function (entry) {\n      var handler = targetMap.get(entry.target);\n      if (handler) handler(entry.contentRect);\n    });\n  });\n}\n/**\n * Efficiently observe size changes on an element. Depends on the `ResizeObserver` api,\n * and polyfills are needed in older browsers.\n *\n * ```ts\n * const [ref, attachRef] = useCallbackRef(null);\n *\n * const rect = useResizeObserver(ref);\n *\n * return (\n *  <div ref={attachRef}>\n *    {JSON.stringify(rect)}\n *  </div>\n * )\n * ```\n *\n * @param element The DOM element to observe\n */\n\n\nexport default function useResizeObserver(element) {\n  var _useState = useState(null),\n      rect = _useState[0],\n      setRect = _useState[1];\n\n  useEffect(function () {\n    if (!element) return;\n    getResizeObserver().observe(element);\n    setRect(element.getBoundingClientRect());\n    targetMap.set(element, function (rect) {\n      setRect(rect);\n    });\n    return function () {\n      targetMap.delete(element);\n    };\n  }, [element]);\n  return rect;\n}","const _excluded = [\"onKeyDown\"];\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* eslint-disable jsx-a11y/no-static-element-interactions */\n\n/* eslint-disable jsx-a11y/anchor-has-content */\nimport * as React from 'react';\nimport { useEventCallback } from '@restart/hooks';\nimport { useButtonProps } from './Button';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function isTrivialHref(href) {\n  return !href || href.trim() === '#';\n}\n\n/**\n * An generic `<a>` component that covers a few A11y cases, ensuring that\n * cases where the `href` is missing or trivial like \"#\" are treated like buttons.\n */\nconst Anchor = /*#__PURE__*/React.forwardRef((_ref, ref) => {\n  let {\n    onKeyDown\n  } = _ref,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  const [buttonProps] = useButtonProps(Object.assign({\n    tagName: 'a'\n  }, props));\n  const handleKeyDown = useEventCallback(e => {\n    buttonProps.onKeyDown(e);\n    onKeyDown == null ? void 0 : onKeyDown(e);\n  });\n\n  if (isTrivialHref(props.href) && !props.role || props.role === 'button') {\n    return /*#__PURE__*/_jsx(\"a\", Object.assign({\n      ref: ref\n    }, props, buttonProps, {\n      onKeyDown: handleKeyDown\n    }));\n  }\n\n  return /*#__PURE__*/_jsx(\"a\", Object.assign({\n    ref: ref\n  }, props, {\n    onKeyDown: onKeyDown\n  }));\n});\nAnchor.displayName = 'Anchor';\nexport default Anchor;","import * as React from 'react';\nconst NavContext = /*#__PURE__*/React.createContext(null);\nNavContext.displayName = 'NavContext';\nexport default NavContext;","import * as React from 'react';\nconst SelectableContext = /*#__PURE__*/React.createContext(null);\nexport const makeEventKey = (eventKey, href = null) => {\n  if (eventKey != null) return String(eventKey);\n  return href || null;\n};\nexport default SelectableContext;","import { useEffect } from 'react';\nimport useEventCallback from './useEventCallback';\n\n/**\n * Attaches an event handler outside directly to specified DOM element\n * bypassing the react synthetic event system.\n *\n * @param element The target to listen for events on\n * @param event The DOM event name\n * @param handler An event handler\n * @param capture Whether or not to listen during the capture event phase\n */\nexport default function useEventListener(eventTarget, event, listener, capture) {\n  if (capture === void 0) {\n    capture = false;\n  }\n\n  var handler = useEventCallback(listener);\n  useEffect(function () {\n    var target = typeof eventTarget === 'function' ? eventTarget() : eventTarget;\n    target.addEventListener(event, handler, capture);\n    return function () {\n      return target.removeEventListener(event, handler, capture);\n    };\n  }, [eventTarget]);\n}","import { useReducer } from 'react';\n/**\n * Returns a function that triggers a component update. the hook equivalent to\n * `this.forceUpdate()` in a class component. In most cases using a state value directly\n * is preferable but may be required in some advanced usages of refs for interop or\n * when direct DOM manipulation is required.\n *\n * ```ts\n * const forceUpdate = useForceUpdate();\n *\n * const updateOnClick = useCallback(() => {\n *  forceUpdate()\n * }, [forceUpdate])\n *\n * return <button type=\"button\" onClick={updateOnClick}>Hi there</button>\n * ```\n */\n\nexport default function useForceUpdate() {\n  // The toggling state value is designed to defeat React optimizations for skipping\n  // updates when they are stricting equal to the last state value\n  var _useReducer = useReducer(function (state) {\n    return !state;\n  }, false),\n      dispatch = _useReducer[1];\n\n  return dispatch;\n}","import useEventListener from './useEventListener';\nimport { useCallback } from 'react';\n\n/**\n * Attaches an event handler outside directly to the `document`,\n * bypassing the react synthetic event system.\n *\n * ```ts\n * useGlobalListener('keydown', (event) => {\n *  console.log(event.key)\n * })\n * ```\n *\n * @param event The DOM event name\n * @param handler An event handler\n * @param capture Whether or not to listen during the capture event phase\n */\nexport default function useGlobalListener(event, handler, capture) {\n  if (capture === void 0) {\n    capture = false;\n  }\n\n  var documentTarget = useCallback(function () {\n    return document;\n  }, []);\n  return useEventListener(documentTarget, event, handler, capture);\n}","import * as React from 'react';\nconst DropdownContext = /*#__PURE__*/React.createContext(null);\nexport default DropdownContext;","const _excluded = [\"children\"];\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport { useContext, useRef } from 'react';\nimport * as React from 'react';\nimport useCallbackRef from '@restart/hooks/useCallbackRef';\nimport DropdownContext from './DropdownContext';\nimport usePopper from './usePopper';\nimport useRootClose from './useRootClose';\nimport mergeOptionsWithPopperConfig from './mergeOptionsWithPopperConfig';\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst noop = () => {};\n/**\n * @memberOf Dropdown\n * @param {object}  options\n * @param {boolean} options.flip Automatically adjust the menu `drop` position based on viewport edge detection\n * @param {[number, number]} options.offset Define an offset distance between the Menu and the Toggle\n * @param {boolean} options.show Display the menu manually, ignored in the context of a `Dropdown`\n * @param {boolean} options.usePopper opt in/out of using PopperJS to position menus. When disabled you must position it yourself.\n * @param {string}  options.rootCloseEvent The pointer event to listen for when determining \"clicks outside\" the menu for triggering a close.\n * @param {object}  options.popperConfig Options passed to the [`usePopper`](/api/usePopper) hook.\n */\n\n\nexport function useDropdownMenu(options = {}) {\n  const context = useContext(DropdownContext);\n  const [arrowElement, attachArrowRef] = useCallbackRef();\n  const hasShownRef = useRef(false);\n  const {\n    flip,\n    offset,\n    rootCloseEvent,\n    fixed = false,\n    placement: placementOverride,\n    popperConfig = {},\n    enableEventListeners = true,\n    usePopper: shouldUsePopper = !!context\n  } = options;\n  const show = (context == null ? void 0 : context.show) == null ? !!options.show : context.show;\n\n  if (show && !hasShownRef.current) {\n    hasShownRef.current = true;\n  }\n\n  const handleClose = e => {\n    context == null ? void 0 : context.toggle(false, e);\n  };\n\n  const {\n    placement,\n    setMenu,\n    menuElement,\n    toggleElement\n  } = context || {};\n  const popper = usePopper(toggleElement, menuElement, mergeOptionsWithPopperConfig({\n    placement: placementOverride || placement || 'bottom-start',\n    enabled: shouldUsePopper,\n    enableEvents: enableEventListeners == null ? show : enableEventListeners,\n    offset,\n    flip,\n    fixed,\n    arrowElement,\n    popperConfig\n  }));\n  const menuProps = Object.assign({\n    ref: setMenu || noop,\n    'aria-labelledby': toggleElement == null ? void 0 : toggleElement.id\n  }, popper.attributes.popper, {\n    style: popper.styles.popper\n  });\n  const metadata = {\n    show,\n    placement,\n    hasShown: hasShownRef.current,\n    toggle: context == null ? void 0 : context.toggle,\n    popper: shouldUsePopper ? popper : null,\n    arrowProps: shouldUsePopper ? Object.assign({\n      ref: attachArrowRef\n    }, popper.attributes.arrow, {\n      style: popper.styles.arrow\n    }) : {}\n  };\n  useRootClose(menuElement, handleClose, {\n    clickTrigger: rootCloseEvent,\n    disabled: !show\n  });\n  return [menuProps, metadata];\n}\nconst defaultProps = {\n  usePopper: true\n};\n\n/**\n * Also exported as `<Dropdown.Menu>` from `Dropdown`.\n *\n * @displayName DropdownMenu\n * @memberOf Dropdown\n */\nfunction DropdownMenu(_ref) {\n  let {\n    children\n  } = _ref,\n      options = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  const [props, meta] = useDropdownMenu(options);\n  return /*#__PURE__*/_jsx(_Fragment, {\n    children: children(props, meta)\n  });\n}\n\nDropdownMenu.displayName = 'DropdownMenu';\nDropdownMenu.defaultProps = defaultProps;\n/** @component */\n\nexport default DropdownMenu;","import { useContext, useCallback } from 'react';\nimport * as React from 'react';\nimport { useSSRSafeId } from './ssr';\nimport DropdownContext from './DropdownContext';\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const isRoleMenu = el => {\n  var _el$getAttribute;\n\n  return ((_el$getAttribute = el.getAttribute('role')) == null ? void 0 : _el$getAttribute.toLowerCase()) === 'menu';\n};\n\nconst noop = () => {};\n/**\n * Wires up Dropdown toggle functionality, returning a set a props to attach\n * to the element that functions as the dropdown toggle (generally a button).\n *\n * @memberOf Dropdown\n */\n\n\nexport function useDropdownToggle() {\n  const id = useSSRSafeId();\n  const {\n    show = false,\n    toggle = noop,\n    setToggle,\n    menuElement\n  } = useContext(DropdownContext) || {};\n  const handleClick = useCallback(e => {\n    toggle(!show, e);\n  }, [show, toggle]);\n  const props = {\n    id,\n    ref: setToggle || noop,\n    onClick: handleClick,\n    'aria-expanded': !!show\n  }; // This is maybe better down in an effect, but\n  // the component is going to update anyway when the menu element\n  // is set so might return new props.\n\n  if (menuElement && isRoleMenu(menuElement)) {\n    props['aria-haspopup'] = true;\n  }\n\n  return [props, {\n    show,\n    toggle\n  }];\n}\n\n/**\n * Also exported as `<Dropdown.Toggle>` from `Dropdown`.\n *\n * @displayName DropdownToggle\n * @memberOf Dropdown\n */\nfunction DropdownToggle({\n  children\n}) {\n  const [props, meta] = useDropdownToggle();\n  return /*#__PURE__*/_jsx(_Fragment, {\n    children: children(props, meta)\n  });\n}\n\nDropdownToggle.displayName = 'DropdownToggle';\n/** @component */\n\nexport default DropdownToggle;","const _excluded = [\"eventKey\", \"disabled\", \"onClick\", \"active\", \"as\"];\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport SelectableContext, { makeEventKey } from './SelectableContext';\nimport NavContext from './NavContext';\nimport Button from './Button';\nimport { dataAttr } from './DataKey';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\n/**\n * Create a dropdown item. Returns a set of props for the dropdown item component\n * including an `onClick` handler that prevents selection when the item is disabled\n */\nexport function useDropdownItem({\n  key,\n  href,\n  active,\n  disabled,\n  onClick\n}) {\n  const onSelectCtx = useContext(SelectableContext);\n  const navContext = useContext(NavContext);\n  const {\n    activeKey\n  } = navContext || {};\n  const eventKey = makeEventKey(key, href);\n  const isActive = active == null && key != null ? makeEventKey(activeKey) === eventKey : active;\n  const handleClick = useEventCallback(event => {\n    if (disabled) return;\n    onClick == null ? void 0 : onClick(event);\n\n    if (onSelectCtx && !event.isPropagationStopped()) {\n      onSelectCtx(eventKey, event);\n    }\n  });\n  return [{\n    onClick: handleClick,\n    'aria-disabled': disabled || undefined,\n    'aria-selected': isActive,\n    [dataAttr('dropdown-item')]: ''\n  }, {\n    isActive\n  }];\n}\nconst DropdownItem = /*#__PURE__*/React.forwardRef((_ref, ref) => {\n  let {\n    eventKey,\n    disabled,\n    onClick,\n    active,\n    as: Component = Button\n  } = _ref,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  const [dropdownItemProps] = useDropdownItem({\n    key: eventKey,\n    href: props.href,\n    disabled,\n    onClick,\n    active\n  });\n  return /*#__PURE__*/_jsx(Component, Object.assign({}, props, {\n    ref: ref\n  }, dropdownItemProps));\n});\nDropdownItem.displayName = 'DropdownItem';\nexport default DropdownItem;","import qsa from 'dom-helpers/querySelectorAll';\nimport addEventListener from 'dom-helpers/addEventListener';\nimport { useCallback, useRef, useEffect, useMemo, useContext } from 'react';\nimport * as React from 'react';\nimport { useUncontrolledProp } from 'uncontrollable';\nimport usePrevious from '@restart/hooks/usePrevious';\nimport useForceUpdate from '@restart/hooks/useForceUpdate';\nimport useGlobalListener from '@restart/hooks/useGlobalListener';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport DropdownContext from './DropdownContext';\nimport DropdownMenu from './DropdownMenu';\nimport DropdownToggle, { isRoleMenu } from './DropdownToggle';\nimport DropdownItem from './DropdownItem';\nimport SelectableContext from './SelectableContext';\nimport { dataAttr } from './DataKey';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction useRefWithUpdate() {\n  const forceUpdate = useForceUpdate();\n  const ref = useRef(null);\n  const attachRef = useCallback(element => {\n    ref.current = element; // ensure that a menu set triggers an update for consumers\n\n    forceUpdate();\n  }, [forceUpdate]);\n  return [ref, attachRef];\n}\n/**\n * @displayName Dropdown\n * @public\n */\n\n\nfunction Dropdown({\n  defaultShow,\n  show: rawShow,\n  onSelect,\n  onToggle: rawOnToggle,\n  itemSelector = `* [${dataAttr('dropdown-item')}]`,\n  focusFirstItemOnShow,\n  placement = 'bottom-start',\n  children\n}) {\n  const [show, onToggle] = useUncontrolledProp(rawShow, defaultShow, rawOnToggle); // We use normal refs instead of useCallbackRef in order to populate the\n  // the value as quickly as possible, otherwise the effect to focus the element\n  // may run before the state value is set\n\n  const [menuRef, setMenu] = useRefWithUpdate();\n  const menuElement = menuRef.current;\n  const [toggleRef, setToggle] = useRefWithUpdate();\n  const toggleElement = toggleRef.current;\n  const lastShow = usePrevious(show);\n  const lastSourceEvent = useRef(null);\n  const focusInDropdown = useRef(false);\n  const onSelectCtx = useContext(SelectableContext);\n  const toggle = useCallback((nextShow, event, source = event == null ? void 0 : event.type) => {\n    onToggle(nextShow, {\n      originalEvent: event,\n      source\n    });\n  }, [onToggle]);\n  const handleSelect = useEventCallback((key, event) => {\n    onSelect == null ? void 0 : onSelect(key, event);\n    toggle(false, event, 'select');\n\n    if (!event.isPropagationStopped()) {\n      onSelectCtx == null ? void 0 : onSelectCtx(key, event);\n    }\n  });\n  const context = useMemo(() => ({\n    toggle,\n    placement,\n    show,\n    menuElement,\n    toggleElement,\n    setMenu,\n    setToggle\n  }), [toggle, placement, show, menuElement, toggleElement, setMenu, setToggle]);\n\n  if (menuElement && lastShow && !show) {\n    focusInDropdown.current = menuElement.contains(document.activeElement);\n  }\n\n  const focusToggle = useEventCallback(() => {\n    if (toggleElement && toggleElement.focus) {\n      toggleElement.focus();\n    }\n  });\n  const maybeFocusFirst = useEventCallback(() => {\n    const type = lastSourceEvent.current;\n    let focusType = focusFirstItemOnShow;\n\n    if (focusType == null) {\n      focusType = menuRef.current && isRoleMenu(menuRef.current) ? 'keyboard' : false;\n    }\n\n    if (focusType === false || focusType === 'keyboard' && !/^key.+$/.test(type)) {\n      return;\n    }\n\n    const first = qsa(menuRef.current, itemSelector)[0];\n    if (first && first.focus) first.focus();\n  });\n  useEffect(() => {\n    if (show) maybeFocusFirst();else if (focusInDropdown.current) {\n      focusInDropdown.current = false;\n      focusToggle();\n    } // only `show` should be changing\n  }, [show, focusInDropdown, focusToggle, maybeFocusFirst]);\n  useEffect(() => {\n    lastSourceEvent.current = null;\n  });\n\n  const getNextFocusedChild = (current, offset) => {\n    if (!menuRef.current) return null;\n    const items = qsa(menuRef.current, itemSelector);\n    let index = items.indexOf(current) + offset;\n    index = Math.max(0, Math.min(index, items.length));\n    return items[index];\n  };\n\n  useGlobalListener('keydown', event => {\n    var _menuRef$current, _toggleRef$current;\n\n    const {\n      key\n    } = event;\n    const target = event.target;\n    const fromMenu = (_menuRef$current = menuRef.current) == null ? void 0 : _menuRef$current.contains(target);\n    const fromToggle = (_toggleRef$current = toggleRef.current) == null ? void 0 : _toggleRef$current.contains(target); // Second only to https://github.com/twbs/bootstrap/blob/8cfbf6933b8a0146ac3fbc369f19e520bd1ebdac/js/src/dropdown.js#L400\n    // in inscrutability\n\n    const isInput = /input|textarea/i.test(target.tagName);\n\n    if (isInput && (key === ' ' || key !== 'Escape' && fromMenu)) {\n      return;\n    }\n\n    if (!fromMenu && !fromToggle) {\n      return;\n    }\n\n    if (key === 'Tab' && (!menuRef.current || !show)) {\n      return;\n    }\n\n    lastSourceEvent.current = event.type;\n    const meta = {\n      originalEvent: event,\n      source: event.type\n    };\n\n    switch (key) {\n      case 'ArrowUp':\n        {\n          const next = getNextFocusedChild(target, -1);\n          if (next && next.focus) next.focus();\n          event.preventDefault();\n          return;\n        }\n\n      case 'ArrowDown':\n        event.preventDefault();\n\n        if (!show) {\n          onToggle(true, meta);\n        } else {\n          const next = getNextFocusedChild(target, 1);\n          if (next && next.focus) next.focus();\n        }\n\n        return;\n\n      case 'Tab':\n        // on keydown the target is the element being tabbed FROM, we need that\n        // to know if this event is relevant to this dropdown (e.g. in this menu).\n        // On `keyup` the target is the element being tagged TO which we use to check\n        // if focus has left the menu\n        addEventListener(document, 'keyup', e => {\n          var _menuRef$current2;\n\n          if (e.key === 'Tab' && !e.target || !((_menuRef$current2 = menuRef.current) != null && _menuRef$current2.contains(e.target))) {\n            onToggle(false, meta);\n          }\n        }, {\n          once: true\n        });\n        break;\n\n      case 'Escape':\n        if (key === 'Escape') {\n          event.preventDefault();\n          event.stopPropagation();\n        }\n\n        onToggle(false, meta);\n        break;\n\n      default:\n    }\n  });\n  return /*#__PURE__*/_jsx(SelectableContext.Provider, {\n    value: handleSelect,\n    children: /*#__PURE__*/_jsx(DropdownContext.Provider, {\n      value: context,\n      children: children\n    })\n  });\n}\n\nDropdown.displayName = 'Dropdown';\nDropdown.Menu = DropdownMenu;\nDropdown.Toggle = DropdownToggle;\nDropdown.Item = DropdownItem;\nexport default Dropdown;","import * as React from 'react';\nconst DropdownContext = /*#__PURE__*/React.createContext({});\nDropdownContext.displayName = 'DropdownContext';\nexport default DropdownContext;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useDropdownItem } from '@restart/ui/DropdownItem';\nimport Anchor from '@restart/ui/Anchor';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DropdownItem = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  eventKey,\n  disabled = false,\n  onClick,\n  active,\n  as: Component = Anchor,\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'dropdown-item');\n  const [dropdownItemProps, meta] = useDropdownItem({\n    key: eventKey,\n    href: props.href,\n    disabled,\n    onClick,\n    active\n  });\n  return /*#__PURE__*/_jsx(Component, { ...props,\n    ...dropdownItemProps,\n    ref: ref,\n    className: classNames(className, prefix, meta.isActive && 'active', disabled && 'disabled')\n  });\n});\nDropdownItem.displayName = 'DropdownItem';\nexport default DropdownItem;","import { useEffect, useLayoutEffect } from 'react';\nvar isReactNative = typeof global !== 'undefined' && // @ts-ignore\nglobal.navigator && // @ts-ignore\nglobal.navigator.product === 'ReactNative';\nvar isDOM = typeof document !== 'undefined';\n/**\n * Is `useLayoutEffect` in a DOM or React Native environment, otherwise resolves to useEffect\n * Only useful to avoid the console warning.\n *\n * PREFER `useEffect` UNLESS YOU KNOW WHAT YOU ARE DOING.\n *\n * @category effects\n */\n\nexport default isDOM || isReactNative ? useLayoutEffect : useEffect;","import invariant from 'invariant';\nimport { useCallback } from 'react';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nexport default function useWrappedRefWithWarning(ref, componentName) {\n  // @ts-ignore\n  if (!(process.env.NODE_ENV !== \"production\")) return ref; // eslint-disable-next-line react-hooks/rules-of-hooks\n\n  const warningRef = useCallback(refValue => {\n    !(refValue == null || !refValue.isReactComponent) ? process.env.NODE_ENV !== \"production\" ? invariant(false, `${componentName} injected a ref to a provided \\`as\\` component that resolved to a component instance instead of a DOM element. ` + 'Use `React.forwardRef` to provide the injected ref to the class component as a prop in order to pass it directly to a DOM element') : invariant(false) : void 0;\n  }, [componentName]); // eslint-disable-next-line react-hooks/rules-of-hooks\n\n  return useMergedRefs(warningRef, ref);\n}","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport { useDropdownMenu } from '@restart/ui/DropdownMenu';\nimport useIsomorphicEffect from '@restart/hooks/useIsomorphicEffect';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nimport warning from 'warning';\nimport DropdownContext from './DropdownContext';\nimport InputGroupContext from './InputGroupContext';\nimport NavbarContext from './NavbarContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport useWrappedRefWithWarning from './useWrappedRefWithWarning';\nimport { alignPropType } from './types';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  flip: true\n};\nexport function getDropdownMenuPlacement(alignEnd, dropDirection, isRTL) {\n  const topStart = isRTL ? 'top-end' : 'top-start';\n  const topEnd = isRTL ? 'top-start' : 'top-end';\n  const bottomStart = isRTL ? 'bottom-end' : 'bottom-start';\n  const bottomEnd = isRTL ? 'bottom-start' : 'bottom-end';\n  const leftStart = isRTL ? 'right-start' : 'left-start';\n  const leftEnd = isRTL ? 'right-end' : 'left-end';\n  const rightStart = isRTL ? 'left-start' : 'right-start';\n  const rightEnd = isRTL ? 'left-end' : 'right-end';\n  let placement = alignEnd ? bottomEnd : bottomStart;\n  if (dropDirection === 'up') placement = alignEnd ? topEnd : topStart;else if (dropDirection === 'end') placement = alignEnd ? rightEnd : rightStart;else if (dropDirection === 'start') placement = alignEnd ? leftEnd : leftStart;\n  return placement;\n}\nconst DropdownMenu = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  align,\n  rootCloseEvent,\n  flip,\n  show: showProps,\n  renderOnMount,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  popperConfig,\n  variant,\n  ...props\n}, ref) => {\n  let alignEnd = false;\n  const isNavbar = useContext(NavbarContext);\n  const prefix = useBootstrapPrefix(bsPrefix, 'dropdown-menu');\n  const {\n    align: contextAlign,\n    drop,\n    isRTL\n  } = useContext(DropdownContext);\n  align = align || contextAlign;\n  const isInputGroup = useContext(InputGroupContext);\n  const alignClasses = [];\n\n  if (align) {\n    if (typeof align === 'object') {\n      const keys = Object.keys(align);\n      process.env.NODE_ENV !== \"production\" ? warning(keys.length === 1, 'There should only be 1 breakpoint when passing an object to `align`') : void 0;\n\n      if (keys.length) {\n        const brkPoint = keys[0];\n        const direction = align[brkPoint]; // .dropdown-menu-end is required for responsively aligning\n        // left in addition to align left classes.\n\n        alignEnd = direction === 'start';\n        alignClasses.push(`${prefix}-${brkPoint}-${direction}`);\n      }\n    } else if (align === 'end') {\n      alignEnd = true;\n    }\n  }\n\n  const placement = getDropdownMenuPlacement(alignEnd, drop, isRTL);\n  const [menuProps, {\n    hasShown,\n    popper,\n    show,\n    toggle\n  }] = useDropdownMenu({\n    flip,\n    rootCloseEvent,\n    show: showProps,\n    usePopper: !isNavbar && alignClasses.length === 0,\n    offset: [0, 2],\n    popperConfig,\n    placement\n  });\n  menuProps.ref = useMergedRefs(useWrappedRefWithWarning(ref, 'DropdownMenu'), menuProps.ref);\n  useIsomorphicEffect(() => {\n    // Popper's initial position for the menu is incorrect when\n    // renderOnMount=true. Need to call update() to correct it.\n    if (show) popper == null ? void 0 : popper.update();\n  }, [show]);\n  if (!hasShown && !renderOnMount && !isInputGroup) return null; // For custom components provide additional, non-DOM, props;\n\n  if (typeof Component !== 'string') {\n    menuProps.show = show;\n\n    menuProps.close = () => toggle == null ? void 0 : toggle(false);\n\n    menuProps.align = align;\n  }\n\n  let style = props.style;\n\n  if (popper != null && popper.placement) {\n    // we don't need the default popper style,\n    // menus are display: none when not shown.\n    style = { ...props.style,\n      ...menuProps.style\n    };\n    props['x-placement'] = popper.placement;\n  }\n\n  return /*#__PURE__*/_jsx(Component, { ...props,\n    ...menuProps,\n    style: style // Bootstrap css requires this data attrib to style responsive menus.\n    ,\n    ...((alignClasses.length || isNavbar) && {\n      'data-bs-popper': 'static'\n    }),\n    className: classNames(className, prefix, show && 'show', alignEnd && `${prefix}-end`, variant && `${prefix}-${variant}`, ...alignClasses)\n  });\n});\nDropdownMenu.displayName = 'DropdownMenu';\nDropdownMenu.defaultProps = defaultProps;\nexport default DropdownMenu;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport { useDropdownToggle } from '@restart/ui/DropdownToggle';\nimport DropdownContext from '@restart/ui/DropdownContext';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nimport Button from './Button';\nimport InputGroupContext from './InputGroupContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport useWrappedRefWithWarning from './useWrappedRefWithWarning';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DropdownToggle = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  split,\n  className,\n  childBsPrefix,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = Button,\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'dropdown-toggle');\n  const dropdownContext = useContext(DropdownContext);\n  const isInputGroup = useContext(InputGroupContext);\n\n  if (childBsPrefix !== undefined) {\n    props.bsPrefix = childBsPrefix;\n  }\n\n  const [toggleProps] = useDropdownToggle();\n  toggleProps.ref = useMergedRefs(toggleProps.ref, useWrappedRefWithWarning(ref, 'DropdownToggle')); // This intentionally forwards size and variant (if set) to the\n  // underlying component, to allow it to render size and style variants.\n\n  return /*#__PURE__*/_jsx(Component, {\n    className: classNames(className, prefix, split && `${prefix}-split`, !!isInputGroup && (dropdownContext == null ? void 0 : dropdownContext.show) && 'show'),\n    ...toggleProps,\n    ...props\n  });\n});\nDropdownToggle.displayName = 'DropdownToggle';\nexport default DropdownToggle;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext, useMemo } from 'react';\nimport BaseDropdown from '@restart/ui/Dropdown';\nimport { useUncontrolled } from 'uncontrollable';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport DropdownContext from './DropdownContext';\nimport DropdownItem from './DropdownItem';\nimport DropdownMenu, { getDropdownMenuPlacement } from './DropdownMenu';\nimport DropdownToggle from './DropdownToggle';\nimport InputGroupContext from './InputGroupContext';\nimport { useBootstrapPrefix, useIsRTL } from './ThemeProvider';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport { alignPropType } from './types';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DropdownHeader = createWithBsPrefix('dropdown-header', {\n  defaultProps: {\n    role: 'heading'\n  }\n});\nconst DropdownDivider = createWithBsPrefix('dropdown-divider', {\n  Component: 'hr',\n  defaultProps: {\n    role: 'separator'\n  }\n});\nconst DropdownItemText = createWithBsPrefix('dropdown-item-text', {\n  Component: 'span'\n});\nconst defaultProps = {\n  navbar: false,\n  align: 'start',\n  autoClose: true\n};\nconst Dropdown = /*#__PURE__*/React.forwardRef((pProps, ref) => {\n  const {\n    bsPrefix,\n    drop,\n    show,\n    className,\n    align,\n    onSelect,\n    onToggle,\n    focusFirstItemOnShow,\n    // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n    as: Component = 'div',\n    navbar: _4,\n    autoClose,\n    ...props\n  } = useUncontrolled(pProps, {\n    show: 'onToggle'\n  });\n  const isInputGroup = useContext(InputGroupContext);\n  const prefix = useBootstrapPrefix(bsPrefix, 'dropdown');\n  const isRTL = useIsRTL();\n\n  const isClosingPermitted = source => {\n    // autoClose=false only permits close on button click\n    if (autoClose === false) return source === 'click'; // autoClose=inside doesn't permit close on rootClose\n\n    if (autoClose === 'inside') return source !== 'rootClose'; // autoClose=outside doesn't permit close on select\n\n    if (autoClose === 'outside') return source !== 'select';\n    return true;\n  };\n\n  const handleToggle = useEventCallback((nextShow, meta) => {\n    if (meta.originalEvent.currentTarget === document && (meta.source !== 'keydown' || meta.originalEvent.key === 'Escape')) meta.source = 'rootClose';\n    if (isClosingPermitted(meta.source)) onToggle == null ? void 0 : onToggle(nextShow, meta);\n  });\n  const alignEnd = align === 'end';\n  const placement = getDropdownMenuPlacement(alignEnd, drop, isRTL);\n  const contextValue = useMemo(() => ({\n    align,\n    drop,\n    isRTL\n  }), [align, drop, isRTL]);\n  return /*#__PURE__*/_jsx(DropdownContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(BaseDropdown, {\n      placement: placement,\n      show: show,\n      onSelect: onSelect,\n      onToggle: handleToggle,\n      focusFirstItemOnShow: focusFirstItemOnShow,\n      itemSelector: `.${prefix}-item:not(.disabled):not(:disabled)`,\n      children: isInputGroup ? props.children : /*#__PURE__*/_jsx(Component, { ...props,\n        ref: ref,\n        className: classNames(className, show && 'show', (!drop || drop === 'down') && prefix, drop === 'up' && 'dropup', drop === 'end' && 'dropend', drop === 'start' && 'dropstart')\n      })\n    })\n  });\n});\nDropdown.displayName = 'Dropdown';\nDropdown.defaultProps = defaultProps;\nexport default Object.assign(Dropdown, {\n  Toggle: DropdownToggle,\n  Menu: DropdownMenu,\n  Item: DropdownItem,\n  ItemText: DropdownItemText,\n  Divider: DropdownDivider,\n  Header: DropdownHeader\n});","import * as React from 'react'; // TODO: check\n\nconst context = /*#__PURE__*/React.createContext(null);\ncontext.displayName = 'NavbarContext';\nexport default context;"],"names":["$f01a183cc7bdff77849e49ad26eb904$var$defaultContext","prefix","String","Math","round","random","current","$f01a183cc7bdff77849e49ad26eb904$var$SSRContext","_react","$f01a183cc7bdff77849e49ad26eb904$var$canUseDOM","Boolean","window","document","createElement","useSSRSafeId","defaultId","ctx","useContext","console","warn","useMemo","isReactNative","global","navigator","product","useLayoutEffect","useEffect","WeakMap","_excluded","Anchor","React","_ref","ref","href","onKeyDown","props","source","excluded","key","i","target","sourceKeys","Object","keys","length","indexOf","_objectWithoutPropertiesLoose","_useButtonProps","useButtonProps","assign","tagName","buttonProps","_slicedToArray","handleKeyDown","useEventCallback","e","trim","role","_jsx","displayName","NavContext","SelectableContext","makeEventKey","eventKey","arguments","undefined","useEventListener","eventTarget","event","listener","capture","handler","addEventListener","removeEventListener","useForceUpdate","useReducer","state","useGlobalListener","documentTarget","useCallback","noop","useDropdownMenu","options","context","DropdownContext","_useCallbackRef","useCallbackRef","_useCallbackRef2","arrowElement","attachArrowRef","hasShownRef","useRef","flip","offset","rootCloseEvent","_options$fixed","fixed","placementOverride","placement","_options$popperConfig","popperConfig","_options$enableEventL","enableEventListeners","_options$usePopper","usePopper","shouldUsePopper","show","_ref2","setMenu","menuElement","toggleElement","popper","mergeOptionsWithPopperConfig","enabled","enableEvents","menuProps","id","attributes","style","styles","metadata","hasShown","toggle","arrowProps","arrow","useRootClose","clickTrigger","disabled","DropdownMenu","children","_useDropdownMenu","_useDropdownMenu2","meta","_Fragment","defaultProps","isRoleMenu","el","_el$getAttribute","getAttribute","toLowerCase","useDropdownToggle","_ref$show","_ref$toggle","setToggle","handleClick","onClick","DropdownToggle","_useDropdownToggle","_useDropdownToggle2","useDropdownItem","active","onSelectCtx","activeKey","isActive","isPropagationStopped","_defineProperty","dataAttr","DropdownItem","_ref$as","as","Component","Button","_useDropdownItem","dropdownItemProps","useRefWithUpdate","forceUpdate","attachRef","element","Dropdown","defaultShow","rawShow","onSelect","rawOnToggle","onToggle","_ref$itemSelector","itemSelector","concat","focusFirstItemOnShow","_ref$placement","_useUncontrolledProp","useUncontrolledProp","_useUncontrolledProp2","_useRefWithUpdate","_useRefWithUpdate2","menuRef","_useRefWithUpdate3","_useRefWithUpdate4","toggleRef","lastShow","usePrevious","lastSourceEvent","focusInDropdown","nextShow","type","originalEvent","handleSelect","contains","activeElement","focusToggle","focus","maybeFocusFirst","focusType","test","first","qsa","getNextFocusedChild","items","index","max","min","_menuRef$current","_toggleRef$current","fromMenu","fromToggle","next","preventDefault","_menuRef$current2","once","stopPropagation","value","Menu","Toggle","Item","bsPrefix","className","_ref$disabled","_objectWithoutProperties","useBootstrapPrefix","_useDropdownItem2","_objectSpread","classNames","useWrappedRefWithWarning","componentName","getDropdownMenuPlacement","alignEnd","dropDirection","isRTL","align","showProps","renderOnMount","variant","isNavbar","NavbarContext","_useContext","contextAlign","drop","isInputGroup","InputGroupContext","alignClasses","brkPoint","direction","push","_useDropdownMenu2$","useMergedRefs","useIsomorphicEffect","update","close","split","childBsPrefix","dropdownContext","toggleProps","DropdownHeader","createWithBsPrefix","DropdownDivider","DropdownItemText","pProps","_useUncontrolled","useUncontrolled","_useUncontrolled$as","autoClose","navbar","useIsRTL","handleToggle","currentTarget","contextValue","BaseDropdown","ItemText","Divider","Header"],"sourceRoot":""}