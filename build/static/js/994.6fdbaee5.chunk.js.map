{"version":3,"file":"static/js/994.6fdbaee5.chunk.js","mappings":"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","sources":["pages/apps/Projects/index.tsx","../node_modules/react-bootstrap/esm/Badge.js","../node_modules/react-bootstrap/esm/ButtonGroup.js","../node_modules/react-bootstrap/esm/CardImg.js","../node_modules/react-bootstrap/esm/CardHeader.js","../node_modules/react-bootstrap/esm/Card.js","../node_modules/react-bootstrap/esm/CardHeaderContext.js","../node_modules/react-bootstrap/esm/ElementChildren.js","../node_modules/react-bootstrap/esm/ProgressBar.js","../node_modules/react-bootstrap/esm/Row.js"],"sourcesContent":["import React from \"react\";\nimport {\n  Row,\n  Col,\n  Card,\n  Button,\n  ButtonGroup,\n  Badge,\n  ProgressBar,\n  OverlayTrigger,\n  Tooltip,\n} from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport classNames from \"classnames\";\nimport FeatherIcons from \"feather-icons-react\";\n\n// dummy data\nimport { projects, ProjectTypes } from \"./data\";\n\n// single project\nconst SingleProject = (props: { project: ProjectTypes }) => {\n  const project = props.project || {};\n  const variant = project.state === \"Completed\" ? \"success\" : \"warning\";\n  const displayCount = 3;\n\n  let modifiedTeamMembers;\n\n  if (\n    project.teamMembers.length <= displayCount ||\n    project.teamMembers.length - displayCount === 1\n  ) {\n    modifiedTeamMembers = project.teamMembers;\n  } else {\n    modifiedTeamMembers = project.teamMembers.filter(\n      (m, index) => index < displayCount\n    );\n  }\n\n  return (\n    <Card>\n      <Card.Body>\n        <Badge bg={variant} className=\"float-end\">\n          {project.state}\n        </Badge>\n        <p\n          className={classNames(\n            \"text-\" + variant,\n            \"text-uppercase\",\n            \"fs-12\",\n            \"mb-2\"\n          )}\n        >\n          {project.technology}\n        </p>\n        <h5>\n          <Link to=\"#\" className=\"text-dark\">\n            {project.title}\n          </Link>\n        </h5>\n        <p className=\"text-muted mb-4\">{project.shortDesc}</p>\n\n        <div>\n          {(modifiedTeamMembers || []).map((member, index) => {\n            return (\n              <Link key={index} to=\"#\">\n                {member.image && (\n                  <img\n                    src={member.image}\n                    className=\"avatar-sm m-1 rounded-circle\"\n                    alt=\"\"\n                  />\n                )}\n                {member.variant && (\n                  <div className=\"avatar-sm fw-bold d-inline-block m-1\">\n                    <span\n                      className={classNames(\n                        \"avatar-title\",\n                        \"rounded-circle\",\n                        \"bg-soft-\" + member.variant,\n                        \"text-\" + member.variant\n                      )}\n                    >\n                      {member.name[0]}\n                    </span>\n                  </div>\n                )}\n              </Link>\n            );\n          })}\n          {project.teamMembers.length > modifiedTeamMembers.length && (\n            <Link to=\"#\">\n              <div className=\"avatar-sm fw-bold d-inline-block m-1\">\n                <span className=\"avatar-title rounded-circle bg-soft-warning text-warning\">\n                  {project.teamMembers.length - displayCount}+\n                </span>\n              </div>\n            </Link>\n          )}\n        </div>\n      </Card.Body>\n      <Card.Body className=\"border-top\">\n        <Row className=\"align-items-center\">\n          <Col sm=\"auto\">\n            <ul className=\"list-inline mb-0\">\n              <li className=\"list-inline-item pe-2\">\n                <OverlayTrigger\n                  placement=\"top\"\n                  overlay={<Tooltip id=\"button-tooltip\">Due date</Tooltip>}\n                >\n                  <Link to=\"#\" className=\"text-muted d-inline-block\">\n                    {\" \"}\n                    <i className=\"uil uil-calender me-1\"></i> {project.endDate}{\" \"}\n                  </Link>\n                </OverlayTrigger>\n              </li>\n              <li className=\"list-inline-item pe-2\">\n                <OverlayTrigger\n                  placement=\"top\"\n                  overlay={<Tooltip id=\"button-tooltip\">Tasks</Tooltip>}\n                >\n                  <Link to=\"#\" className=\"text-muted d-inline-block\">\n                    {\" \"}\n                    <i className=\"uil uil-bars me-1\"></i> {project.totalTasks}{\" \"}\n                  </Link>\n                </OverlayTrigger>\n              </li>\n              <li className=\"list-inline-item\">\n                <OverlayTrigger\n                  placement=\"top\"\n                  overlay={<Tooltip id=\"button-tooltip\">Comments</Tooltip>}\n                >\n                  <Link to=\"#\" className=\"text-muted d-inline-block\">\n                    {\" \"}\n                    <i className=\"uil uil-comments-alt me-1\"></i>{\" \"}\n                    {project.totalComments}{\" \"}\n                  </Link>\n                </OverlayTrigger>\n              </li>\n            </ul>\n          </Col>\n          <Col sm={{ offset: 1 }}>\n            <OverlayTrigger\n              placement=\"top\"\n              overlay={\n                <Tooltip id=\"button-tooltip\">\n                  {project.progress}% completed\n                </Tooltip>\n              }\n            >\n              <ProgressBar\n                now={project.progress}\n                variant={variant}\n                className=\"mt-4 mt-sm-0\"\n                style={{ height: \"5px\" }}\n              />\n            </OverlayTrigger>\n          </Col>\n        </Row>\n      </Card.Body>\n    </Card>\n  );\n};\n\nconst Projects = () => {\n  return (\n    <>\n      <Row>\n        <Col xs={12}>\n          <div className=\"page-title-box\">\n            <h4 className=\"page-title\">Projects List</h4>\n            <div className=\"page-title-right\">\n              <div className=\"mt-2 mt-md-0\">\n                <Button variant=\"danger\" className=\"me-4 mb-2 mb-sm-0\">\n                  <i className=\"uil-plus me-1\"></i> Create Project\n                </Button>\n                <ButtonGroup>\n                  <Button variant=\"primary\" className=\"mb-2 mb-sm-0\">\n                    All\n                  </Button>\n                </ButtonGroup>\n                <ButtonGroup className=\"ms-md-1\">\n                  <Button variant=\"white\" className=\"mb-2 mb-sm-0\">\n                    Ongoing\n                  </Button>\n                  <Button variant=\"white\" className=\"mb-2 mb-sm-0\">\n                    Finished\n                  </Button>\n                </ButtonGroup>\n                <ButtonGroup className=\"ms-2 d-none d-sm-inline-block me-1\">\n                  <Button>\n                    <i className=\"uil uil-apps\"></i>\n                  </Button>\n                </ButtonGroup>\n                <ButtonGroup className=\"d-none d-sm-inline-block\">\n                  <Button variant=\"white\">\n                    <i className=\"uil uil-align-left-justify\"></i>\n                  </Button>\n                </ButtonGroup>\n              </div>\n            </div>\n          </div>\n        </Col>\n      </Row>\n\n      <Row>\n        {(projects || []).map((project, i) => {\n          return (\n            <Col xl={4} md={6} key={\"proj-\" + project.id}>\n              <SingleProject project={project} />\n            </Col>\n          );\n        })}\n      </Row>\n\n      <Row className=\"mb-3 mt-2\">\n        <Col xs={12}>\n          <div className=\"text-center\">\n            <Button variant=\"white\">\n              <FeatherIcons icon=\"loader\" className=\"icon-dual icon-xs me-2\" />\n              Load more\n            </Button>\n          </div>\n        </Col>\n      </Row>\n    </>\n  );\n};\n\nexport default Projects;\n","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  bg: 'primary',\n  pill: false\n};\nconst Badge = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  bg,\n  pill,\n  text,\n  className,\n  as: Component = 'span',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'badge');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, prefix, pill && `rounded-pill`, text && `text-${text}`, bg && `bg-${bg}`)\n  });\n});\nBadge.displayName = 'Badge';\nBadge.defaultProps = defaultProps;\nexport default Badge;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  vertical: false,\n  role: 'group'\n};\nconst ButtonGroup = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  size,\n  vertical,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...rest\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'btn-group');\n  let baseClass = prefix;\n  if (vertical) baseClass = `${prefix}-vertical`;\n  return /*#__PURE__*/_jsx(Component, { ...rest,\n    ref: ref,\n    className: classNames(className, baseClass, size && `${prefix}-${size}`)\n  });\n});\nButtonGroup.displayName = 'ButtonGroup';\nButtonGroup.defaultProps = defaultProps;\nexport default ButtonGroup;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardImg = /*#__PURE__*/React.forwardRef( // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n({\n  bsPrefix,\n  className,\n  variant,\n  as: Component = 'img',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card-img');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(variant ? `${prefix}-${variant}` : prefix, className),\n    ...props\n  });\n});\nCardImg.displayName = 'CardImg';\nexport default CardImg;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport CardHeaderContext from './CardHeaderContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardHeader = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card-header');\n  const contextValue = useMemo(() => ({\n    cardHeaderBsPrefix: prefix\n  }), [prefix]);\n  return /*#__PURE__*/_jsx(CardHeaderContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(Component, {\n      ref: ref,\n      ...props,\n      className: classNames(className, prefix)\n    })\n  });\n});\nCardHeader.displayName = 'CardHeader';\nexport default CardHeader;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport divWithClassName from './divWithClassName';\nimport CardImg from './CardImg';\nimport CardHeader from './CardHeader';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DivStyledAsH5 = divWithClassName('h5');\nconst DivStyledAsH6 = divWithClassName('h6');\nconst CardBody = createWithBsPrefix('card-body');\nconst CardTitle = createWithBsPrefix('card-title', {\n  Component: DivStyledAsH5\n});\nconst CardSubtitle = createWithBsPrefix('card-subtitle', {\n  Component: DivStyledAsH6\n});\nconst CardLink = createWithBsPrefix('card-link', {\n  Component: 'a'\n});\nconst CardText = createWithBsPrefix('card-text', {\n  Component: 'p'\n});\nconst CardFooter = createWithBsPrefix('card-footer');\nconst CardImgOverlay = createWithBsPrefix('card-img-overlay');\nconst defaultProps = {\n  body: false\n};\nconst Card = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  bg,\n  text,\n  border,\n  body,\n  children,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, prefix, bg && `bg-${bg}`, text && `text-${text}`, border && `border-${border}`),\n    children: body ? /*#__PURE__*/_jsx(CardBody, {\n      children: children\n    }) : children\n  });\n});\nCard.displayName = 'Card';\nCard.defaultProps = defaultProps;\nexport default Object.assign(Card, {\n  Img: CardImg,\n  Title: CardTitle,\n  Subtitle: CardSubtitle,\n  Body: CardBody,\n  Link: CardLink,\n  Text: CardText,\n  Header: CardHeader,\n  Footer: CardFooter,\n  ImgOverlay: CardImgOverlay\n});","import * as React from 'react';\nconst context = /*#__PURE__*/React.createContext(null);\ncontext.displayName = 'CardHeaderContext';\nexport default context;","import * as React from 'react';\n/**\n * Iterates through children that are typically specified as `props.children`,\n * but only maps over children that are \"valid elements\".\n *\n * The mapFunction provided index will be normalised to the components mapped,\n * so an invalid component would not increase the index.\n *\n */\n\nfunction map(children, func) {\n  let index = 0;\n  return React.Children.map(children, child => /*#__PURE__*/React.isValidElement(child) ? func(child, index++) : child);\n}\n/**\n * Iterates through children that are \"valid elements\".\n *\n * The provided forEachFunc(child, index) will be called for each\n * leaf child with the index reflecting the position relative to \"valid components\".\n */\n\n\nfunction forEach(children, func) {\n  let index = 0;\n  React.Children.forEach(children, child => {\n    if ( /*#__PURE__*/React.isValidElement(child)) func(child, index++);\n  });\n}\n\nexport { map, forEach };","import classNames from 'classnames';\nimport * as React from 'react';\nimport { cloneElement } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { map } from './ElementChildren';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ROUND_PRECISION = 1000;\n/**\n * Validate that children, if any, are instances of `<ProgressBar>`.\n */\n\nfunction onlyProgressBar(props, propName, componentName) {\n  const children = props[propName];\n\n  if (!children) {\n    return null;\n  }\n\n  let error = null;\n  React.Children.forEach(children, child => {\n    if (error) {\n      return;\n    }\n    /**\n     * Compare types in a way that works with libraries that patch and proxy\n     * components like react-hot-loader.\n     *\n     * see https://github.com/gaearon/react-hot-loader#checking-element-types\n     */\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n\n\n    const element = /*#__PURE__*/_jsx(ProgressBar, {});\n\n    if (child.type === element.type) return;\n    const childType = child.type;\n    const childIdentifier = /*#__PURE__*/React.isValidElement(child) ? childType.displayName || childType.name || childType : child;\n    error = new Error(`Children of ${componentName} can contain only ProgressBar ` + `components. Found ${childIdentifier}.`);\n  });\n  return error;\n}\n\nconst defaultProps = {\n  min: 0,\n  max: 100,\n  animated: false,\n  isChild: false,\n  visuallyHidden: false,\n  striped: false\n};\n\nfunction getPercentage(now, min, max) {\n  const percentage = (now - min) / (max - min) * 100;\n  return Math.round(percentage * ROUND_PRECISION) / ROUND_PRECISION;\n}\n\nfunction renderProgressBar({\n  min,\n  now,\n  max,\n  label,\n  visuallyHidden,\n  striped,\n  animated,\n  className,\n  style,\n  variant,\n  bsPrefix,\n  ...props\n}, ref) {\n  return /*#__PURE__*/_jsx(\"div\", {\n    ref: ref,\n    ...props,\n    role: \"progressbar\",\n    className: classNames(className, `${bsPrefix}-bar`, {\n      [`bg-${variant}`]: variant,\n      [`${bsPrefix}-bar-animated`]: animated,\n      [`${bsPrefix}-bar-striped`]: animated || striped\n    }),\n    style: {\n      width: `${getPercentage(now, min, max)}%`,\n      ...style\n    },\n    \"aria-valuenow\": now,\n    \"aria-valuemin\": min,\n    \"aria-valuemax\": max,\n    children: visuallyHidden ? /*#__PURE__*/_jsx(\"span\", {\n      className: \"visually-hidden\",\n      children: label\n    }) : label\n  });\n}\n\nconst ProgressBar = /*#__PURE__*/React.forwardRef(({\n  isChild,\n  ...props\n}, ref) => {\n  props.bsPrefix = useBootstrapPrefix(props.bsPrefix, 'progress');\n\n  if (isChild) {\n    return renderProgressBar(props, ref);\n  }\n\n  const {\n    min,\n    now,\n    max,\n    label,\n    visuallyHidden,\n    striped,\n    animated,\n    bsPrefix,\n    variant,\n    className,\n    children,\n    ...wrapperProps\n  } = props;\n  return /*#__PURE__*/_jsx(\"div\", {\n    ref: ref,\n    ...wrapperProps,\n    className: classNames(className, bsPrefix),\n    children: children ? map(children, child => /*#__PURE__*/cloneElement(child, {\n      isChild: true\n    })) : renderProgressBar({\n      min,\n      now,\n      max,\n      label,\n      visuallyHidden,\n      striped,\n      animated,\n      bsPrefix,\n      variant\n    }, ref)\n  });\n});\nProgressBar.displayName = 'ProgressBar';\nProgressBar.defaultProps = defaultProps;\nexport default ProgressBar;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DEVICE_SIZES = ['xxl', 'xl', 'lg', 'md', 'sm', 'xs'];\nconst Row = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'row');\n  const sizePrefix = `${decoratedBsPrefix}-cols`;\n  const classes = [];\n  DEVICE_SIZES.forEach(brkPoint => {\n    const propValue = props[brkPoint];\n    delete props[brkPoint];\n    let cols;\n\n    if (propValue != null && typeof propValue === 'object') {\n      ({\n        cols\n      } = propValue);\n    } else {\n      cols = propValue;\n    }\n\n    const infix = brkPoint !== 'xs' ? `-${brkPoint}` : '';\n    if (cols != null) classes.push(`${sizePrefix}${infix}-${cols}`);\n  });\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, decoratedBsPrefix, ...classes)\n  });\n});\nRow.displayName = 'Row';\nexport default Row;"],"names":["SingleProject","props","modifiedTeamMembers","project","variant","state","teamMembers","length","filter","m","index","_jsxs","Card","children","_jsx","Badge","bg","className","classNames","technology","Link","to","title","shortDesc","map","member","image","src","alt","name","Row","Col","sm","OverlayTrigger","placement","overlay","Tooltip","id","endDate","totalTasks","totalComments","offset","progress","ProgressBar","now","style","height","_Fragment","xs","Button","ButtonGroup","projects","i","xl","md","FeatherIcons","icon","React","_ref","ref","bsPrefix","pill","text","_ref$as","as","Component","_objectWithoutProperties","_excluded","prefix","useBootstrapPrefix","_objectSpread","concat","displayName","defaultProps","size","vertical","rest","baseClass","role","CardImg","CardHeader","contextValue","useMemo","cardHeaderBsPrefix","CardHeaderContext","value","DivStyledAsH5","divWithClassName","DivStyledAsH6","CardBody","createWithBsPrefix","CardTitle","CardSubtitle","CardLink","CardText","CardFooter","CardImgOverlay","border","body","Object","assign","Img","Title","Subtitle","Body","Text","Header","Footer","ImgOverlay","context","func","child","ROUND_PRECISION","getPercentage","min","max","percentage","Math","round","renderProgressBar","_classNames","label","visuallyHidden","striped","animated","_defineProperty","width","_ref2","isChild","_excluded2","wrapperProps","_excluded3","cloneElement","DEVICE_SIZES","decoratedBsPrefix","sizePrefix","classes","forEach","brkPoint","cols","propValue","infix","push"],"sourceRoot":""}